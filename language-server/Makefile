dune_wrap = $(shell command -v coqc > /dev/null || echo "etc/rocq-wrap-coqc.sh")
dune_no_stop = $(dune_wrap) dune $(1)
dune = $(dune_wrap) dune $(1) --stop-on-first-error
dune_dev = $(dune_wrap) dune $(1) --stop-on-first-error --profile dev
dune_fatal = $(dune_wrap) dune $(1) --stop-on-first-error --profile fatalwarnings
DUNE_IN_FILES = $(shell find . -name "dune.in" | sed -e 's/.in$$//')
# This makefile is mostly calling dune and dune doesn't like
# being called in parralel, so we enforce -j1
.NOTPARALLEL:

all: $(DUNE_IN_FILES)
	$(call dune,build)
.PHONY: all

dev: $(DUNE_IN_FILES)
	$(call dune_dev,build)
.PHONY: dev

fatalwarnings: $(DUNE_IN_FILES)
	$(call dune_fatal,build)
.PHONY: fatalwarnings

# simplify this and get rid of the dune.in files once we require Rocq >= 9.0
%dune: %dune.in
	@rm -f $@
	@echo "; generated by make, do not edit\n" > $@
	@if test -e .coq-dune-files || \
	    (command -v coqc > /dev/null && (coqc --version | grep -q '8.18\|8.19\|8.20')) ; then \
	  sed -e 's/@@ROCQ_RUNTIME@@/coq-core/g' $< >> $@; \
	else \
	  sed -e 's/@@ROCQ_RUNTIME@@/rocq-runtime/g' $< >> $@; \
	fi
	@chmod a-w $@

dune-files: $(DUNE_IN_FILES)
.PHONY: dune-files

coq-dune-files:
	touch .coq-dune-files
	$(MAKE) dune-files
	$(RM) .coq-dune-files
.PHONY: coq-dune-files

build: $(DUNE_IN_FILES)
	$(call dune,build) -p vsrocq-language-server
.PHONY: build

test: $(DUNE_IN_FILES)
	ROCQLIB=`rocq -where 2>/dev/null` COQLIB=`coqc -where 2>/dev/null` \
	$(call dune_no_stop,runtest)
.PHONY: test

clean:
	$(call dune,clean)
	$(RM) $(DUNE_IN_FILES)
.PHONY: clean

install: $(DUNE_IN_FILES)
	$(call dune,install) vsrocq-language-server
.PHONY: install
